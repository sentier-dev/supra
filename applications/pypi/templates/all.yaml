apiVersion: v1
kind: Namespace
metadata:
  name: pypi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pypiserver
spec:
  capacity:
    storage: 64Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  local:
    path: /var/lib/pypiserver
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - dds-kube-node-4
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pypiserver
spec:
  storageClassName: local-storage
  accessModes:
  - ReadWriteOnce
  volumeName: pypiserver
  resources:
    requests:
      storage: 64Gi
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: pypi-cauldron-ch-route
  namespace: pypi
spec:
  parentRefs:
  - name: dds-gateway
    namespace: cert-manager
  hostnames: ["pypi.cauldron.ch", "pypi.sentier.dev"]
  rules:
    - backendRefs:
      - name: {{ include "pypi.fullname" . }}-svc
        port: {{ .Values.service.port }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{ include "pypi.labels" . | nindent 4 }}
  name: {{ include "pypi.fullname" . }}
  namespace: pypi
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{ include "pypi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{ include "pypi.labels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["pypi-server"]
        args:
        - run
        - "-a"
        - "download, update, list"
        - "-P"
        - /etc/pypiserver/htpasswd.txt
        - /var/lib/pypiserver
        - "--welcome"
        - "/var/www/html/index.html"
        ports:
        - containerPort: {{ .Values.service.port }}
          name: web
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /var/lib/pypiserver
        - name: htpasswd
          mountPath: /etc/pypiserver
          readOnly: true
        - name: welcome
          mountPath: /var/www/html
          readOnly: true
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pypiserver
      - name: htpasswd
        secret:
          secretName: htpasswd
          items:
          - key: htpasswd.txt
            path: htpasswd.txt
      - name: welcome
        configMap:
          name: pypiserver-welcome-html
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pypi-svc
  name: pypiserver-svc
  namespace: pypi
spec:
  ports:
    - name: http
      port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.port }}
  selector:
    {{- include "pypi.selectorLabels" . | nindent 4 }}
